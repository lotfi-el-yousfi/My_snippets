{
  "dockerJava": {
    "prefix": "dockerJAva",
    "body": [
      "# Use official Maven image to build the Spring Boot application\r",
      "FROM maven:3.8.7-eclipse-temurin-17 AS build\r",
      "\r",
      "# Set working directory\r",
      "WORKDIR /app\r",
      "\r",
      "# Copy the pom.xml and download dependencies\r",
      "COPY pom.xml .\r",
      "RUN mvn dependency:go-offline -B\r",
      "\r",
      "# Copy the application source code\r",
      "COPY src ./src\r",
      "\r",
      "# Build the application\r",
      "RUN mvn clean package -DskipTests\r",
      "\r",
      "# Use official OpenJDK runtime image to run the Spring Boot app\r",
      "FROM eclipse-temurin:17-jdk-jammy\r",
      "\r",
      "# Set working directory\r",
      "WORKDIR /app\r",
      "\r",
      "# Copy the built jar file from the previous stage\r",
      "COPY --from=build /app/target/*.jar app.jar\r",
      "\r",
      "# Expose port 8080\r",
      "EXPOSE 8080\r",
      "\r",
      "# Run the Spring Boot application\r",
      "ENTRYPOINT [\"java\", \"-jar\", \"app.jar\"]\r",
      ""
    ],
    "description": "dockerJava"
  },
  "dockerReact": {
    "prefix": "dockerReact",
    "body": [
      "# Use official Node.js image as the base image\r",
      "FROM node:18-bullseye-slim\r",
      "\r",
      "# Set working directory inside the container\r",
      "WORKDIR /app\r",
      "\r",
      "# Install dependencies\r",
      "COPY package*.json ./\r",
      "RUN npm install\r",
      "\r",
      "# Copy all application files into the container\r",
      "COPY . .\r",
      "\r",
      "# Expose port 3000 (default for React)\r",
      "EXPOSE 3000\r",
      "\r",
      "# Start the React app\r",
      "CMD [\"npm\", \"start\"]\r",
      ""
    ],
    "description": "dockerReact"
  }
}